<?xml version="1.0" encoding="UTF-8"?>    
<!DOCTYPE generatorConfiguration    
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"    
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">    
<!-- 第一种mybatis逆向生成xml配置 -->
<generatorConfiguration>     
<properties resource="jdbc.properties" /> 
<context id="sqlserverTables" targetRuntime="MyBatis3">  
        <property name="javaFileEncoding" value="UTF-8" />
        <!-- 替换Example为Criteria -->
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
            <property name="searchString" value="Example$" />
            <property name="replaceString" value="Criteria" />
        </plugin>
        <!-- 表格对应Java bean类型实现java.io.Serializable接口，添加默认的serialVersionUID -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin">
            <property name="suppressJavaInterface " value="true" />
        </plugin>
        <!-- 表格对应Java bean类型增加toString方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
 

        <commentGenerator>    
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->    
            <property name="suppressAllComments" value="true" />    
        </commentGenerator>      
        <!-- 数据库链接URL、用户名、密码 -->    
        <jdbcConnection driverClass="${jdbc.driverClassName}"
                        connectionURL="${jdbc.url}"  
                        userId="${jdbc.username}"
                        password="${jdbc.password}"> 
        </jdbcConnection>      
        <!--      
        默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer    
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal      
        -->    
        <javaTypeResolver>    
            <property name="forceBigDecimals" value="false" />    
        </javaTypeResolver>    
    
        <!--     
        生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，    
        也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下    
        -->    
        <!--<javaModelGenerator targetPackage="com.joey.mybaties.test.pojo" targetProject="MAVEN">-->    
        <javaModelGenerator targetPackage="com.server.payment.entity" targetProject="./src/main/java">    
            <property name="enableSubPackages" value="true"/>    
            <!-- 从数据库返回的值被清理前后的空格  -->    
            <property name="trimStrings" value="true" />    
        </javaModelGenerator>    
    
        <!--对应的mapper.xml文件  -->    
        <sqlMapGenerator targetPackage="com.server.payment.mappers" targetProject="./src/main/java">    
            <property name="enableSubPackages" value="true"/>    
        </sqlMapGenerator>    
    
        <!-- 对应的Mapper接口类文件 -->    
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.server.payment.daos" targetProject="./src/main/java">    
            <property name="enableSubPackages" value="true"/>    
        </javaClientGenerator>    

        <!-- 列出要生成代码的所有表，这里配置的是不生成Example文件 -->    
        <table tableName="payment_fund_trans" domainObjectName="PaymentFundTrans"    
               enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"    
               enableSelectByExample="false" selectByExampleQueryId="false" >
            <property name="PaymentFundTrans" value="false"/>
        </table>
    </context>
</generatorConfiguration>
